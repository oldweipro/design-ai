name: Release

on:
  push:
    tags: ['v*']

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

permissions:
  contents: write
  packages: write

jobs:
  build-binaries:
    name: Build Binaries
    runs-on: ubuntu-latest
    strategy:
      matrix:
        goos: [linux, windows, darwin]
        goarch: [amd64, arm64]
        exclude:
          - goos: windows
            goarch: arm64
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version: '1.23'

      - name: Build
        env:
          GOOS: ${{ matrix.goos }}
          GOARCH: ${{ matrix.goarch }}
        run: |
          BINARY_NAME="design-ai"
          [ "$GOOS" = "windows" ] && BINARY_NAME="${BINARY_NAME}.exe"
          
          OUTPUT_DIR="dist/${GOOS}-${GOARCH}"
          mkdir -p $OUTPUT_DIR
          
          CGO_ENABLED=0 go build -ldflags="-w -s" -o "${OUTPUT_DIR}/${BINARY_NAME}" .
          
          cd dist
          VERSION="${GITHUB_REF#refs/tags/}"
          if [ "$GOOS" = "windows" ]; then
            zip -r "design-ai-${VERSION}-${GOOS}-${GOARCH}.zip" "${GOOS}-${GOARCH}/"
          else
            tar -czf "design-ai-${VERSION}-${GOOS}-${GOARCH}.tar.gz" "${GOOS}-${GOARCH}/"
          fi

      - uses: actions/upload-artifact@v4
        with:
          name: binaries-${{ matrix.goos }}-${{ matrix.goarch }}
          path: dist/*.{tar.gz,zip}

  build-docker:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: docker/setup-buildx-action@v3
      - uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - uses: docker/metadata-action@v5
        id: meta
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}

      - uses: docker/build-push-action@v5
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

  release:
    runs-on: ubuntu-latest
    needs: [build-binaries, build-docker]
    steps:
      - uses: actions/checkout@v4
      - uses: actions/download-artifact@v4
        with:
          path: artifacts
          merge-multiple: true

      - uses: softprops/action-gh-release@v2
        with:
          files: artifacts/*
          body: |
            ## ðŸš€ Release ${GITHUB_REF_NAME}
            
            ### Docker:
            ```bash
            docker pull ghcr.io/${{ github.repository }}:${GITHUB_REF_NAME}
            ```
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }