name: Release

on:
  push:
    tags:
      - 'v*'

jobs:
  release:
    runs-on: ubuntu-latest
    name: Create Release
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        
    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.21'
        
    - name: Cache Go modules
      uses: actions/cache@v3
      with:
        path: |
          ~/.cache/go-build
          ~/go/pkg/mod
        key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-
          
    - name: Download dependencies
      run: go mod download
      
    - name: Run tests
      run: go test -v ./...
      
    - name: Build binaries
      run: |
        # Linux AMD64
        CGO_ENABLED=0 GOOS=linux GOARCH=amd64 go build -ldflags="-s -w" -o dist/design-ai-linux-amd64 .
        
        # Linux ARM64
        CGO_ENABLED=0 GOOS=linux GOARCH=arm64 go build -ldflags="-s -w" -o dist/design-ai-linux-arm64 .
        
        # macOS AMD64
        CGO_ENABLED=0 GOOS=darwin GOARCH=amd64 go build -ldflags="-s -w" -o dist/design-ai-darwin-amd64 .
        
        # macOS ARM64 (M1/M2)
        CGO_ENABLED=0 GOOS=darwin GOARCH=arm64 go build -ldflags="-s -w" -o dist/design-ai-darwin-arm64 .
        
        # Windows AMD64
        CGO_ENABLED=0 GOOS=windows GOARCH=amd64 go build -ldflags="-s -w" -o dist/design-ai-windows-amd64.exe .
        
    - name: Create checksums
      run: |
        cd dist
        sha256sum * > checksums.txt
        
    - name: Generate changelog
      id: changelog
      run: |
        # 生成变更日志
        if [ $(git tag --list | wc -l) -gt 1 ]; then
          PREVIOUS_TAG=$(git describe --tags --abbrev=0 HEAD^)
          echo "CHANGELOG<<EOF" >> $GITHUB_OUTPUT
          git log --pretty=format:"- %s (%h)" ${PREVIOUS_TAG}..HEAD >> $GITHUB_OUTPUT
          echo "" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT
        else
          echo "CHANGELOG=Initial release" >> $GITHUB_OUTPUT
        fi
        
    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        files: |
          dist/*
        body: |
          ## 🚀 Release ${{ github.ref_name }}
          
          ### 📋 更新内容
          ${{ steps.changelog.outputs.CHANGELOG }}
          
          ### 📦 下载文件
          - `design-ai-linux-amd64` - Linux x64
          - `design-ai-linux-arm64` - Linux ARM64
          - `design-ai-darwin-amd64` - macOS Intel
          - `design-ai-darwin-arm64` - macOS Apple Silicon
          - `design-ai-windows-amd64.exe` - Windows x64
          - `checksums.txt` - 校验和文件
          
          ### 🐳 Docker镜像
          ```bash
          docker pull ${{ secrets.DOCKER_USERNAME }}/design-ai:${{ github.ref_name }}
          docker pull ghcr.io/${{ github.repository }}:${{ github.ref_name }}
          ```
          
          ### 📝 部署说明
          1. 下载对应平台的二进制文件
          2. 赋予执行权限：`chmod +x design-ai-*`
          3. 运行应用：`./design-ai-*`
          
          或者使用Docker：
          ```bash
          docker run -p 8080:8080 -v $(pwd)/data:/home/appuser/data ${{ secrets.DOCKER_USERNAME }}/design-ai:${{ github.ref_name }}
          ```
        draft: false
        prerelease: ${{ contains(github.ref_name, 'alpha') || contains(github.ref_name, 'beta') || contains(github.ref_name, 'rc') }}
        generate_release_notes: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  docker-release:
    runs-on: ubuntu-latest
    name: Build Release Docker Image
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
      
    - name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
        
    - name: Login to GitHub Container Registry
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
        
    - name: Extract metadata
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: |
          ${{ secrets.DOCKER_USERNAME }}/design-ai
          ghcr.io/${{ github.repository }}
        tags: |
          type=ref,event=tag
          type=semver,pattern={{version}}
          type=semver,pattern={{major}}.{{minor}}
          type=semver,pattern={{major}}
          
    - name: Build and push
      uses: docker/build-push-action@v5
      with:
        context: .
        platforms: linux/amd64,linux/arm64
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        cache-from: type=gha
        cache-to: type=gha,mode=max